diff --git a/node_modules/ink-testing-library/index.js b/node_modules/ink-testing-library/index.js
index c482b52..237f31d 100644
--- a/node_modules/ink-testing-library/index.js
+++ b/node_modules/ink-testing-library/index.js
@@ -1,66 +1,67 @@
 'use strict';
 const EventEmitter = require('events');
-const {render} = require('ink');
+const { render } = require('ink');
 
 const createStdout = () => {
-	const frames = [];
-	let _lastFrame;
+  const frames = [];
+  let _lastFrame;
 
-	const stdout = {
-		write(frame) {
-			frames.push(frame);
-			_lastFrame = frame;
-		},
-		lastFrame() {
-			return _lastFrame;
-		},
-		frames,
-		columns: 100
-	};
+  const stdout = {
+    write(frame) {
+      frames.push(frame);
+      _lastFrame = frame;
+    },
+    lastFrame() {
+      return _lastFrame;
+    },
+    frames,
+    columns: 100,
+  };
 
-	return stdout;
+  return stdout;
 };
 
 const createStdin = () => {
-	const stdin = new EventEmitter();
-	stdin.setEncoding = () => {};
-	stdin.setRawMode = () => {};
-	stdin.resume = () => {};
-	stdin.pause = () => {};
-	stdin.write = data => stdin.emit('data', data);
+  const stdin = new EventEmitter();
+  stdin.setEncoding = () => {};
+  stdin.setRawMode = () => {};
+  stdin.resume = () => {};
+  stdin.pause = () => {};
+  stdin.write = data => stdin.emit('data', data);
+  stdin.isTTY = true;
 
-	return stdin;
+  return stdin;
 };
 
 const instances = [];
 
 exports.render = tree => {
-	const stdout = createStdout();
-	const stdin = createStdin();
+  const stdout = createStdout();
+  const stdin = createStdin();
 
-	const instance = render(tree, {
-		stdout,
-		stdin,
-		debug: true,
-		exitOnCtrlC: false
-	});
+  const instance = render(tree, {
+    stdout,
+    stdin,
+    debug: true,
+    exitOnCtrlC: false,
+  });
 
-	instances.push(instance);
+  instances.push(instance);
 
-	return {
-		rerender: instance.rerender,
-		unmount: instance.unmount,
-		stdin: {
-			write: stdin.write
-		},
-		frames: stdout.frames,
-		lastFrame: stdout.lastFrame
-	};
+  return {
+    rerender: instance.rerender,
+    unmount: instance.unmount,
+    stdin: {
+      write: stdin.write,
+    },
+    frames: stdout.frames,
+    lastFrame: stdout.lastFrame,
+  };
 };
 
 exports.cleanup = () => {
-	for (const instance of instances) {
-		instance.unmount();
-		instance.cleanup();
-	}
+  for (const instance of instances) {
+    instance.unmount();
+    instance.cleanup();
+  }
 };
